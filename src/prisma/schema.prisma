generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  firstname  String
  lastname   String
  email      String    @unique
  firebaseId String    @unique
  roleId     String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  role       Role      @relation("roleInUser", fields: [roleId], references: [id])
  expenses   Expense[] @relation(name: "userInExpense")
  messages   Message[]

  @@map("users")
}

model Role {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User[]   @relation("roleInUser")

  @@map("roles")
}

model Category {
  id        String    @id @default(uuid())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  expenses  Expense[] @relation(name: "categoryInExpense")

  @@map("categories")
}

model Expense {
  id          String   @id @default(uuid())
  userId      String
  user        User     @relation(name: "userInExpense", fields: [userId], references: [id])
  categoryId  String
  category    Category @relation(name: "categoryInExpense", fields: [categoryId], references: [id])
  amount      Float
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("expenses")
}

model Message {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("messages")
}
